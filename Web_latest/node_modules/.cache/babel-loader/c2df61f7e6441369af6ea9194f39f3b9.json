{"remainingRequest":"/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/node_modules/babel-loader/lib/index.js!/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/node_modules/eslint-loader/index.js??ref--13-0!/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/src/store/index.js","dependencies":[{"path":"/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/src/store/index.js","mtime":1610906404505},{"path":"/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7ClZ1ZS51c2UoVnVleCk7CnZhciBqb2tlc1VybEJhc2UgPSAnaHR0cHM6Ly92Mi5qb2tlYXBpLmRldi9qb2tlJzsKCnZhciByZXNvbHZlSnNvbiA9IGZ1bmN0aW9uIHJlc29sdmVKc29uKHJlcykgewogIHJldHVybiByZXMuanNvbigpOwp9OwoKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBqb2tlczogW10KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX0pPS0VTOiBmdW5jdGlvbiBTRVRfSk9LRVMoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuam9rZXMgPSBwYXlsb2FkLmpva2VzOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZmV0Y2hKb2tlczogZnVuY3Rpb24gZmV0Y2hKb2tlcyhfcmVmLCBfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2gsCiAgICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7CiAgICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YSwKICAgICAgICAgIHN1Y2Nlc3MgPSBfcmVmMi5zdWNjZXNzLAogICAgICAgICAgZmFpbCA9IF9yZWYyLmZhaWw7CgogICAgICAvLyBkb24ndCBoaXQgQVBJIHRvIGdldCAwIGpva2VzCiAgICAgIGlmIChkYXRhLmFtb3VudCA9PT0gMCkgewogICAgICAgIGNvbW1pdCgnU0VUX0pPS0VTJywgewogICAgICAgICAgam9rZXM6IFtdCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIGdlbmVyYXRpbmcgcm91dGUgZnJvbSBiYXNlVXJsIG9mIEFQSQoKCiAgICAgIHZhciBqb2tlc1VybEZpbmFsID0gIiIuY29uY2F0KGpva2VzVXJsQmFzZSwgIi8iKS5jb25jYXQoZGF0YS5nZW5yZSwgIj9hbW91bnQ9IikuY29uY2F0KGRhdGEuYW1vdW50KTsgLy8gdXNpbmcgZmV0Y2ggdG8gaGl0IHRoZSBBUEkKCiAgICAgIGZldGNoKGpva2VzVXJsRmluYWwpLnRoZW4ocmVzb2x2ZUpzb24pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIHRoZSBBUEkgY29udHJhY3QgaXMgZGlmZmVyZW50IHdoZW4gb25seSAxIGpva2UgaXMgZGVtYW5kZWQuCiAgICAgICAgLy8gY2xhc3NpYyBleGFtcGxlIG9mIGhvdyBBUElzIHNob3VsZCBub3QgYmUgY3JlYXRlZAogICAgICAgIGlmIChyZXMuam9rZXMpIHsKICAgICAgICAgIGNvbW1pdCgnU0VUX0pPS0VTJywgcmVzKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVzLmpva2VzID0gW3sKICAgICAgICAgICAgY2F0ZWdvcnk6IHJlcy5jYXRlZ29yeSwKICAgICAgICAgICAgaWQ6IHJlcy5pZCwKICAgICAgICAgICAgc2FmZTogcmVzLnNhZmUsCiAgICAgICAgICAgIHR5cGU6IHJlcy50eXBlCiAgICAgICAgICB9XTsKCiAgICAgICAgICBpZiAocmVzLnR5cGUgPT09ICdzaW5nbGUnKSB7CiAgICAgICAgICAgIHJlcy5qb2tlc1swXS5qb2tlID0gcmVzLmpva2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXMuam9rZXNbMF0uc2V0dXAgPSByZXMuc2V0dXA7CiAgICAgICAgICAgIHJlcy5qb2tlc1swXS5kZWxpdmVyeSA9IHJlcy5kZWxpdmVyeTsKICAgICAgICAgIH0KCiAgICAgICAgICBjb21taXQoJ1NFVF9KT0tFUycsIHJlcyk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChjb25zb2xlLmxvZyk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICAvLyBoYW5kbGluZyBpZiBzdGF0ZS5qb2tlcyBpcyB1bmRlZmluZWQKICAgIGpva2VzOiBmdW5jdGlvbiBqb2tlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuam9rZXMgfHwgW107CiAgICB9CiAgfSwKICBtb2R1bGVzOiB7fQp9KTs="},{"version":3,"sources":["/Users/sukkritsharma/Desktop/CARTORDER SERVICE AND WEB/Web_old/src/store/index.js"],"names":["Vue","Vuex","use","jokesUrlBase","resolveJson","res","json","Store","state","jokes","mutations","SET_JOKES","payload","actions","fetchJokes","commit","dispatch","data","success","fail","amount","jokesUrlFinal","genre","fetch","then","category","id","safe","type","joke","setup","delivery","catch","console","log","getters","modules"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,IAAME,YAAY,GAAG,6BAArB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,CAAvB;;AAEA,eAAe,IAAIL,IAAI,CAACM,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADqB;AAI5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACEH,KADF,EACSI,OADT,EACkB;AACzBJ,MAAAA,KAAK,CAACC,KAAN,GAAcG,OAAO,CAACH,KAAtB;AACD;AAHQ,GAJiB;AAS5BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,mCAC2D;AAAA,UAApDC,MAAoD,QAApDA,MAAoD;AAAA,UAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,UAAlCR,KAAkC,QAAlCA,KAAkC;AAAA,UAAvBS,IAAuB,SAAvBA,IAAuB;AAAA,UAAjBC,OAAiB,SAAjBA,OAAiB;AAAA,UAARC,IAAQ,SAARA,IAAQ;;AAChE;AACA,UAAIF,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrBL,QAAAA,MAAM,CAAC,WAAD,EAAc;AAClBN,UAAAA,KAAK,EAAE;AADW,SAAd,CAAN;AAGA;AACD,OAP+D,CAShE;;;AACA,UAAMY,aAAa,aAAMlB,YAAN,cAAsBc,IAAI,CAACK,KAA3B,qBAA2CL,IAAI,CAACG,MAAhD,CAAnB,CAVgE,CAYhE;;AACAG,MAAAA,KAAK,CAACF,aAAD,CAAL,CACGG,IADH,CACQpB,WADR,EAEGoB,IAFH,CAEQ,UAACnB,GAAD,EAAS;AACb;AACA;AACA,YAAIA,GAAG,CAACI,KAAR,EAAe;AACbM,UAAAA,MAAM,CAAC,WAAD,EAAcV,GAAd,CAAN;AACD,SAFD,MAEO;AACLA,UAAAA,GAAG,CAACI,KAAJ,GAAY,CAAC;AACXgB,YAAAA,QAAQ,EAAEpB,GAAG,CAACoB,QADH;AAEXC,YAAAA,EAAE,EAAErB,GAAG,CAACqB,EAFG;AAGXC,YAAAA,IAAI,EAAEtB,GAAG,CAACsB,IAHC;AAIXC,YAAAA,IAAI,EAAEvB,GAAG,CAACuB;AAJC,WAAD,CAAZ;;AAMA,cAAIvB,GAAG,CAACuB,IAAJ,KAAa,QAAjB,EAA2B;AACzBvB,YAAAA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaoB,IAAb,GAAoBxB,GAAG,CAACwB,IAAxB;AACD,WAFD,MAEO;AACLxB,YAAAA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaqB,KAAb,GAAqBzB,GAAG,CAACyB,KAAzB;AACAzB,YAAAA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAasB,QAAb,GAAwB1B,GAAG,CAAC0B,QAA5B;AACD;;AACDhB,UAAAA,MAAM,CAAC,WAAD,EAAcV,GAAd,CAAN;AACD;AACF,OAtBH,EAuBG2B,KAvBH,CAuBSC,OAAO,CAACC,GAvBjB;AAwBD;AAtCM,GATmB;AAiD5BC,EAAAA,OAAO,EAAE;AACP;AACA1B,IAAAA,KAAK,EAAE,eAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAN,IAAe,EAAnB;AAAA;AAFL,GAjDmB;AAqD5B2B,EAAAA,OAAO,EAAE;AArDmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst jokesUrlBase = 'https://v2.jokeapi.dev/joke'\nconst resolveJson = res => res.json()\n\nexport default new Vuex.Store({\n  state: {\n    jokes: []\n  },\n  mutations: {\n    SET_JOKES (state, payload) {\n      state.jokes = payload.jokes\n    }\n  },\n  actions: {\n    fetchJokes ({ commit, dispatch, state }, { data, success, fail }) {\n      // don't hit API to get 0 jokes\n      if (data.amount === 0) {\n        commit('SET_JOKES', {\n          jokes: []\n        })\n        return\n      }\n\n      // generating route from baseUrl of API\n      const jokesUrlFinal = `${jokesUrlBase}/${data.genre}?amount=${data.amount}`\n\n      // using fetch to hit the API\n      fetch(jokesUrlFinal)\n        .then(resolveJson)\n        .then((res) => {\n          // the API contract is different when only 1 joke is demanded.\n          // classic example of how APIs should not be created\n          if (res.jokes) {\n            commit('SET_JOKES', res)\n          } else {\n            res.jokes = [{\n              category: res.category,\n              id: res.id,\n              safe: res.safe,\n              type: res.type\n            }]\n            if (res.type === 'single') {\n              res.jokes[0].joke = res.joke\n            } else {\n              res.jokes[0].setup = res.setup\n              res.jokes[0].delivery = res.delivery\n            }\n            commit('SET_JOKES', res)\n          }\n        })\n        .catch(console.log)\n    }\n  },\n  getters: {\n    // handling if state.jokes is undefined\n    jokes: state => state.jokes || []\n  },\n  modules: {\n  }\n})\n"]}]}